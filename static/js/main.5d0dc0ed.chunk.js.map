{"version":3,"sources":["Game.js","App.js","index.js"],"names":["words","Object","keys","wordsObject","forEach","key","push","log","DEBUG","fnLib","searchVimeoVideos","qs","a","axios","get","headers","Authorization","res","vimeoData","data","getFnLib","SpeechRecognizer","props","useState","isRecording","setIsRecording","recognition","setRecognition","useEffect","SpeechRecognition","window","webkitSpeechRecognition","SpeechGrammarList","webkitSpeechGrammarList","SpeechRecognitionEvent","webkitSpeechRecognitionEvent","grammarWords","grammar","join","speechRecognitionList","addFromString","grammars","continuous","lang","interimResults","maxAlternatives","console","onresult","event","results","innerKey","word","transcript","confidence","onspeechend","e","Button","onClick","stop","start","message","className","VideoGrid","setVimeoData","update","encodeURIComponent","newVimeoData","iframes","document","querySelectorAll","i","Promise","vidIframe","player","Player","on","getVideoTitle","then","title","setAutopause","play","length","filter","vd","vdi","embed","html","map","src","uri","replace","width","height","frameBorder","allow","Game","App","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.5d0dc0ed.chunk.js","sourcesContent":["import Phaser from \"phaser\";\r\nimport { useEffect, useState, useRef } from \"react\";\r\nimport \"./Game.css\";\r\nimport * as log from \"loglevel\";\r\nimport axios from \"axios\";\r\nimport Player from \"@vimeo/player\";\r\nimport * as wordsObject from \"./words\";\r\nimport Button from \"@mui/material/Button\";\r\nconst words = [];\r\nObject.keys(wordsObject).forEach((key) => {\r\n  words.push(wordsObject[`${key}`]);\r\n});\r\nlog.setLevel(log.levels.DEBUG);\r\n\r\nconst keys = {\r\n  vimeo: \"701aa8cf274531af3ccd513e9642f67c\"\r\n};\r\nconst getFnLib = () => {\r\n  const searchVimeoVideos = async (qs) => {\r\n    let res = await axios.get(`https://api.vimeo.com/videos${qs}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${keys.vimeo}`\r\n      }\r\n    });\r\n    log.debug(\"searchVimeoVideos\", { res });\r\n    if (res) {\r\n      let vimeoData = res.data.data;\r\n      return vimeoData;\r\n    }\r\n    return [];\r\n  };\r\n  return {\r\n    searchVimeoVideos\r\n  };\r\n};\r\nconst fnLib = getFnLib();\r\n\r\nfunction SpeechRecognizer(props) {\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [recognition, setRecognition] = useState(false);\r\n  useEffect(() => {\r\n    log.debug(\"SpeechRecognizer\", words);\r\n    const SpeechRecognition =\r\n      window.SpeechRecognition || window.webkitSpeechRecognition;\r\n    const SpeechGrammarList =\r\n      window.SpeechGrammarList || window.webkitSpeechGrammarList;\r\n    const SpeechRecognitionEvent =\r\n      window.SpeechRecognitionEvent || window.webkitSpeechRecognitionEvent;\r\n    const grammarWords = [\"hemoglobine is superstar\"];\r\n    const grammar =\r\n      \"#JSGF V1.0; grammar commands; public <command> = \" +\r\n      grammarWords.join(\" | \") +\r\n      \" ;\";\r\n    const recognition = new SpeechRecognition();\r\n    let speechRecognitionList = new SpeechGrammarList();\r\n    speechRecognitionList.addFromString(grammar, 1);\r\n    recognition.grammars = speechRecognitionList;\r\n    recognition.continuous = true;\r\n    recognition.lang = \"en-US\";\r\n    recognition.interimResults = false;\r\n    recognition.maxAlternatives = 1;\r\n    console.log(\"SpeechRecognizer\", {\r\n      SpeechRecognition,\r\n      SpeechGrammarList,\r\n      SpeechRecognitionEvent,\r\n      grammarWords,\r\n      grammar,\r\n      recognition,\r\n      speechRecognitionList\r\n    });\r\n\r\n    recognition.onresult = function (event) {\r\n      log.debug(\"Speech result.\", event);\r\n      Object.keys(event.results).forEach((key) => {\r\n        Object.keys(event.results[key]).forEach((innerKey) => {\r\n          const word = event.results[key][innerKey].transcript;\r\n          log.debug(\r\n            `Word: ${word}. Confidence: ` +\r\n              event.results[key][innerKey].confidence\r\n          );\r\n        });\r\n      });\r\n    };\r\n    recognition.onspeechend = async function (e) {\r\n      log.debug(\"Speech ended.\");\r\n      setIsRecording(false);\r\n    };\r\n    setRecognition(recognition);\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <Button\r\n        onClick={() => {\r\n          try {\r\n            if (isRecording) {\r\n              recognition.stop();\r\n              setIsRecording(false);\r\n              log.debug(\"Stopped speach recognition.\");\r\n            } else {\r\n              recognition.start();\r\n              setIsRecording(true);\r\n              log.debug(\"Ready to receive a word command.\");\r\n            }\r\n          } catch (e) {\r\n            log.warn(e.message);\r\n          }\r\n        }}\r\n      >\r\n        {(() => {\r\n          if (isRecording) {\r\n            return \"Stop\";\r\n          } else {\r\n            return \"Start\";\r\n          }\r\n        })()}\r\n      </Button>\r\n      <div className=\"output\"></div>\r\n      <div className=\"hints\"></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction VideoGrid() {\r\n  const [vimeoData, setVimeoData] = useState([]);\r\n  useEffect(() => {\r\n    const update = async () => {\r\n      const newVimeoData = await fnLib.searchVimeoVideos(\r\n        `?sort=date&direction=desc&query=${encodeURIComponent(\"mercedes benz\")}`\r\n      );\r\n      setVimeoData(newVimeoData);\r\n    };\r\n    update();\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <button\r\n        onClick={async () => {\r\n          let iframes = window.document.querySelectorAll(`.playbern-video`);\r\n          log.debug(\"playing all videos\", { iframes });\r\n          if (iframes) {\r\n            for (let i = 0; i < iframes.length; i++) {\r\n              await new Promise((res) => {\r\n                const vidIframe = iframes[i];\r\n                var player = new Player(vidIframe);\r\n                player.on(\"play\", function () {\r\n                  console.log(\"Played the video\");\r\n                });\r\n                player.getVideoTitle().then(function (title) {\r\n                  console.log(\"title:\", title);\r\n                });\r\n                player.setAutopause(false);\r\n                player.play();\r\n                res();\r\n                /* setTimeout(() => {\r\n                  player.pause();\r\n                  res();\r\n                }, 3000) */\r\n              });\r\n            }\r\n          }\r\n        }}\r\n      >\r\n        play all\r\n      </button>\r\n      {vimeoData\r\n        .filter((vd, vdi) => vdi <= 20 && vd && vd.embed && vd.embed.html)\r\n        .map((vd) => {\r\n          return (\r\n            <iframe\r\n              key={vd.uri}\r\n              title=\"vimeo-video\"\r\n              className=\"playbern-video\"\r\n              src={`https://player.vimeo.com/video/${vd.uri.replace(\r\n                \"/videos/\",\r\n                \"\"\r\n              )}`}\r\n              width=\"200\"\r\n              height=\"200\"\r\n              frameBorder=\"0\"\r\n              allow=\"autoplay\"\r\n            ></iframe>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n}\r\nexport default function Game() {\r\n  function resize(game) {\r\n    var canvas = document.querySelector(\"canvas\");\r\n    var windowWidth = window.innerWidth;\r\n    var windowHeight = window.innerHeight;\r\n    var windowRatio = windowWidth / windowHeight;\r\n    var gameRatio = game.config.width / game.config.height;\r\n    if (windowRatio < gameRatio) {\r\n      canvas.style.width = windowWidth + \"px\";\r\n      canvas.style.height = windowWidth / gameRatio + \"px\";\r\n    } else {\r\n      canvas.style.width = windowHeight * gameRatio + \"px\";\r\n      canvas.style.height = windowHeight + \"px\";\r\n    }\r\n  }\r\n  const runGame = () => {\r\n    const vw = Math.max(\r\n      document.documentElement.clientWidth || 0,\r\n      window.innerWidth || 0\r\n    );\r\n    const vh = Math.max(\r\n      document.documentElement.clientHeight || 0,\r\n      window.innerHeight || 0\r\n    );\r\n    var config = {\r\n      type: Phaser.AUTO,\r\n      scale: {\r\n        mode: Phaser.Scale.FIT,\r\n        parent: \"phaser-example\",\r\n        autoCenter: Phaser.Scale.CENTER_BOTH,\r\n        width: vw,\r\n        height: vh\r\n      },\r\n      physics: {\r\n        default: \"arcade\",\r\n        arcade: {\r\n          gravity: { y: 500 }\r\n        }\r\n      },\r\n      scene: {\r\n        noMargins: true,\r\n        preload: preload,\r\n        create: create\r\n      }\r\n    };\r\n\r\n    var game = new Phaser.Game(config);\r\n\r\n    function preload() {\r\n      this.load.setBaseURL(\"http://labs.phaser.io\");\r\n\r\n      this.load.image(\"sky\", \"assets/skies/space3.png\");\r\n      this.load.image(\"logo\", \"assets/sprites/phaser3-logo.png\");\r\n      this.load.image(\"red\", \"assets/particles/red.png\");\r\n    }\r\n\r\n    function create() {\r\n      this.add.image(400, 300, \"sky\");\r\n\r\n      var particles = this.add.particles(\"red\");\r\n\r\n      var emitter = particles.createEmitter({\r\n        speed: 500,\r\n        scale: { start: 1, end: 0 },\r\n        blendMode: \"ADD\"\r\n      });\r\n\r\n      var logo = this.physics.add.image(400, 100, \"logo\");\r\n\r\n      logo.setVelocity(100, 200);\r\n      logo.setBounce(1, 1);\r\n      logo.setCollideWorldBounds(true);\r\n\r\n      emitter.startFollow(logo);\r\n    }\r\n    return game;\r\n  };\r\n  /* useEffect(() => {\r\n    let game;\r\n    window.addEventListener(\"resize\", () => {\r\n      log.debug(\"resized\");\r\n      if (game) {\r\n        log.debug(\"destroying game\");\r\n        game.destroy(true);\r\n      }\r\n      game = runGame();\r\n      resize(game);\r\n    });\r\n    game = runGame();\r\n    resize(game);\r\n  }, []); */\r\n  return (\r\n    <div>\r\n      <SpeechRecognizer />\r\n      <VideoGrid />\r\n    </div>\r\n  );\r\n  //return null;\r\n}\r\n","import \"./styles.css\";\nimport Game from \"./Game\";\n\nexport default function App() {\n  return <Game />;\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}