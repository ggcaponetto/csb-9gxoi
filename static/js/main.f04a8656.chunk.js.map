{"version":3,"sources":["comps/VideoGrid.js","Game.js","App.js","index.js"],"names":["words","VideoGrid","props","useState","vimeoData","setVimeoData","isLoading","setIsLoading","gameContext","useContext","GameContext","keywords","setKeywords","playAll","useRef","a","iframes","window","document","querySelectorAll","log","i","Promise","res","vidIframe","player","Player","on","console","getVideoTitle","then","title","setAutopause","play","length","stopAll","pause","useEffect","update","wordsAudio","inputs","audio","join","split","filter","w","wordsKeyboard","keyboard","allWords","shuffled","sort","Math","random","selected","slice","defaultWords","undefined","Set","map","s","promises","req","fnLib","searchVimeoVideos","encodeURIComponent","catch","e","push","all","newVimeoData","finalArray","vd","forEach","selectedVideo","v","stats","plays","embed","html","b","style","display","flex","flexDirection","textAlign","Fragment","Typography","variant","Button","onClick","flexWrap","alignItems","justifyContent","color","k","score","reduce","acc","curr","toLocaleString","src","width","height","frameBorder","class","allowFullScreen","uri","className","replace","allow","name","CircularProgress","Object","keys","wordsObject","key","DEBUG","gameCotextDefault","actions","addAudio","addKeyoard","React","createContext","qs","axios","get","headers","Authorization","data","getFnLib","RoundScreen","timeLeft","setTimeLeft","isPlaying","duration","colors","remainingTime","SpeechRecognizer","TextRecorder","event","CustomEvent","detail","type","navigation","destination","dispatchEvent","buffer","setBuffer","dispatch","payload","onKeyUp","p","addEventListener","removeEventListener","isRecording","setIsRecording","recognition","setRecognition","SpeechRecognition","webkitSpeechRecognition","SpeechGrammarList","webkitSpeechGrammarList","SpeechRecognitionEvent","webkitSpeechRecognitionEvent","grammarWords","grammar","speechRecognitionList","addFromString","grammars","continuous","lang","interimResults","maxAlternatives","onresult","results","innerKey","word","transcript","confidence","onspeechend","start","message","stop","GameManager","screens","setScreens","currentScreen","setCurrentScreen","sound","add","_sounds","soundtrack","welcomeScreen","packageJson","version","roundScreen","screenStyle","screenWrapper","comp","onGameEvent","index","component","margin","location","reload","LinearProgress","reducer","prevState","action","fnName","newState","Error","JSON","stringify","Game","useReducer","state","Provider","value","App","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.f04a8656.chunk.js","sourcesContent":["import Phaser from \"phaser\";\r\nimport React, {\r\n  useContext,\r\n  useReducer,\r\n  useCallback,\r\n  useEffect,\r\n  useState,\r\n  useRef\r\n} from \"react\";\r\nimport * as log from \"loglevel\";\r\nimport axios from \"axios\";\r\nimport Player from \"@vimeo/player\";\r\nimport * as wordsObject from \"../words\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport LinearProgress from \"@mui/material/LinearProgress\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport * as PIXI from \"pixi.js\";\r\nimport { sound } from \"@pixi/sound\";\r\nimport { GameContext, fnLib } from \"../Game\";\r\n\r\nconst words = [];\r\nObject.keys(wordsObject).forEach((key) => {\r\n  words.push(wordsObject[`${key}`]);\r\n});\r\nlog.setLevel(log.levels.DEBUG);\r\n\r\nexport default function VideoGrid(props) {\r\n  const [vimeoData, setVimeoData] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const gameContext = useContext(GameContext);\r\n  const [keywords, setKeywords] = useState([]);\r\n  const videoRef = useRef(null);\r\n  const playAll = async () => {\r\n    let iframes = window.document.querySelectorAll(`.playbern-video`);\r\n    log.debug(\"playing all videos\", { iframes });\r\n    if (iframes) {\r\n      for (let i = 0; i < iframes.length; i++) {\r\n        await new Promise((res) => {\r\n          const vidIframe = iframes[i];\r\n          var player = new Player(vidIframe);\r\n          player.on(\"play\", function () {\r\n            console.log(\"Played the video\");\r\n          });\r\n          player.getVideoTitle().then(function (title) {\r\n            console.log(\"title:\", title);\r\n          });\r\n          player.setAutopause(false);\r\n          player.play();\r\n          res();\r\n          /* setTimeout(() => {\r\n            player.pause();\r\n            res();\r\n          }, 3000) */\r\n        });\r\n      }\r\n    }\r\n  };\r\n  const stopAll = async () => {\r\n    let iframes = window.document.querySelectorAll(`.playbern-video`);\r\n    log.debug(\"playing all videos\", { iframes });\r\n    if (iframes) {\r\n      for (let i = 0; i < iframes.length; i++) {\r\n        await new Promise((res) => {\r\n          const vidIframe = iframes[i];\r\n          var player = new Player(vidIframe);\r\n          player.on(\"play\", function () {\r\n            console.log(\"Played the video\");\r\n          });\r\n          player.getVideoTitle().then(function (title) {\r\n            console.log(\"title:\", title);\r\n          });\r\n          player.setAutopause(false);\r\n          player.pause();\r\n          res();\r\n          /* setTimeout(() => {\r\n            player.pause();\r\n            res();\r\n          }, 3000) */\r\n        });\r\n      }\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    const update = async () => {\r\n      let nrOfVideos = 10;\r\n      let wordsAudio = gameContext.inputs.audio\r\n        .join(\" \")\r\n        .split(/(\\s+)/)\r\n        .filter((w) => w.length > 3);\r\n      let wordsKeyboard = gameContext.inputs.keyboard\r\n        .split(/(\\s+)/)\r\n        .filter((w) => w.length > 3);\r\n      let allWords = [...wordsAudio, ...wordsKeyboard];\r\n      const shuffled = allWords.sort(() => 0.5 - Math.random());\r\n      let selected = shuffled;\r\n      if (shuffled.length >= nrOfVideos) {\r\n        selected = shuffled.slice(0, nrOfVideos);\r\n      }\r\n      let defaultWords = [\r\n        \"dogs\",\r\n        \"cats\",\r\n        \"kids\",\r\n        \"wedding\",\r\n        \"meme\",\r\n        \"jackass\",\r\n        \"joke\",\r\n        \"fails\",\r\n        \"sport\",\r\n        \"skateboard\"\r\n      ];\r\n      for (let i = 0; i < nrOfVideos; i++) {\r\n        if (selected[i] === undefined) {\r\n          selected[i] = defaultWords[i];\r\n        }\r\n      }\r\n      selected = [...new Set(selected)];\r\n      setKeywords(selected);\r\n      selected = selected.map((s) => `funny ${s}`);\r\n      log.debug(\"searching video for words\", {\r\n        allWords,\r\n        wordsAudio,\r\n        wordsKeyboard,\r\n        shuffled,\r\n        selected\r\n      });\r\n      setIsLoading(true);\r\n      let promises = [];\r\n      for (let i = 0; i < selected.length; i++) {\r\n        const req = fnLib\r\n          .searchVimeoVideos(\r\n            `?sort=plays&direction=desc&query=${encodeURIComponent(\r\n              selected[i]\r\n            )}&minimum_likes=200&trending=true`\r\n          )\r\n          .catch((e) => {\r\n            setIsLoading(false);\r\n          });\r\n        promises.push(req);\r\n      }\r\n      let newVimeoData = await Promise.all(promises);\r\n      setIsLoading(false);\r\n      log.debug(\"playing all videos\", { newVimeoData });\r\n      let finalArray = [];\r\n      newVimeoData\r\n        .filter((vd) => !!vd === true)\r\n        .forEach((vd) => {\r\n          let selectedVideo = vd\r\n            .filter(\r\n              (v) =>\r\n                !!v === true &&\r\n                !!v.stats &&\r\n                v.stats.plays &&\r\n                v.embed &&\r\n                v.embed.html\r\n            )\r\n            .sort((a, b) => {\r\n              if (a.stats.plays || 0 > b.stats.plays || 0) {\r\n                return 1;\r\n              } else if (a.stats.plays || 0 <= b.stats.plays || 0) {\r\n                return -1;\r\n              } else {\r\n                return 0;\r\n              }\r\n            })[0];\r\n          finalArray.push(selectedVideo);\r\n        });\r\n      setVimeoData(finalArray);\r\n    };\r\n    update();\r\n  }, []);\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flex: 1,\r\n        flexDirection: \"column\",\r\n        textAlign: \"center\"\r\n      }}\r\n    >\r\n      {!isLoading ? (\r\n        <React.Fragment>\r\n          <Typography variant=\"h3\">Videos On Your Blog Post</Typography>\r\n          <Button onClick={playAll}>\r\n            <Typography variant=\"h4\">play</Typography>\r\n          </Button>\r\n          <Button onClick={stopAll}>\r\n            <Typography variant=\"h6\">Stop</Typography>\r\n          </Button>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexWrap: \"wrap\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              color: \"cyan\"\r\n            }}\r\n          >\r\n            {keywords.map((k, i) => (\r\n              <span key={`${k}_${i}`}>\r\n                <Typography variant=\"body1\">{`#${k}`}</Typography>&nbsp;\r\n              </span>\r\n            ))}\r\n          </div>\r\n        </React.Fragment>\r\n      ) : null}\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexWrap: \"wrap\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\"\r\n        }}\r\n      >\r\n        {(() => {\r\n          if (!isLoading) {\r\n            // total score\r\n            let score = vimeoData.reduce((acc, curr) => {\r\n              return acc + ((curr && curr.stats && curr.stats.plays) || 0);\r\n            }, 0);\r\n            return (\r\n              <Typography style={{ color: \"springgreen\" }} variant=\"h4\">\r\n                Your score: {score.toLocaleString(\"de-CH\")}\r\n              </Typography>\r\n            );\r\n          }\r\n        })()}\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexWrap: \"wrap\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\"\r\n        }}\r\n      >\r\n        {(() => {\r\n          if (!isLoading) {\r\n            // total score\r\n            let score = vimeoData.reduce((acc, curr) => {\r\n              return acc + ((curr && curr.stats && curr.stats.plays) || 0);\r\n            }, 0);\r\n            return (\r\n              <div>\r\n                <iframe\r\n                  src=\"https://giphy.com/embed/fdyZ3qI0GVZC0\"\r\n                  width=\"480\"\r\n                  height=\"270\"\r\n                  frameBorder=\"0\"\r\n                  class=\"giphy-embed\"\r\n                  allowFullScreen\r\n                ></iframe>\r\n              </div>\r\n            );\r\n          }\r\n        })()}\r\n      </div>\r\n      <br />\r\n      <br />\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexWrap: \"wrap\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\"\r\n        }}\r\n      >\r\n        {vimeoData\r\n          .filter((vd) => !!vd && vd.uri)\r\n          .map((vd) => {\r\n            return (\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\"\r\n                }}\r\n              >\r\n                <iframe\r\n                  key={vd.uri}\r\n                  title=\"vimeo-video\"\r\n                  className=\"playbern-video\"\r\n                  src={`https://player.vimeo.com/video/${vd.uri.replace(\r\n                    \"/videos/\",\r\n                    \"\"\r\n                  )}`}\r\n                  frameBorder=\"0\"\r\n                  allow=\"autoplay\"\r\n                ></iframe>\r\n                <Typography variant=\"h6\">{vd.name}</Typography>\r\n                <Typography variant=\"h5\">\r\n                  Views: {(vd.stats.plays || 0).toLocaleString(\"de-CH\")}\r\n                </Typography>\r\n              </div>\r\n            );\r\n          })}\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\"\r\n        }}\r\n      >\r\n        {isLoading ? (\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\"\r\n            }}\r\n          >\r\n            <CircularProgress />\r\n            <Typography variant=\"h5\">Please hang on</Typography>\r\n            <iframe\r\n              src=\"https://giphy.com/embed/o0vwzuFwCGAFO\"\r\n              width=\"480\"\r\n              height=\"480\"\r\n              frameBorder=\"0\"\r\n              class=\"giphy-embed\"\r\n              allowFullScreen\r\n            ></iframe>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import Phaser from \"phaser\";\r\nimport React, {\r\n  useContext,\r\n  useReducer,\r\n  useCallback,\r\n  useEffect,\r\n  useState,\r\n  useRef\r\n} from \"react\";\r\nimport \"./Game.css\";\r\nimport * as log from \"loglevel\";\r\nimport axios from \"axios\";\r\nimport Player from \"@vimeo/player\";\r\nimport * as wordsObject from \"./words\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport LinearProgress from \"@mui/material/LinearProgress\";\r\nimport * as PIXI from \"pixi.js\";\r\nimport { sound } from \"@pixi/sound\";\r\nimport VideoGrid from \"./comps/VideoGrid\";\r\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\r\nimport packageJson from \"../package.json\";\r\n\r\nconst words = [];\r\nObject.keys(wordsObject).forEach((key) => {\r\n  words.push(wordsObject[`${key}`]);\r\n});\r\nlog.setLevel(log.levels.DEBUG);\r\n\r\nconst gameCotextDefault = {\r\n  actions: {\r\n    replace: \"replace\",\r\n    addAudio: \"addAudio\",\r\n    addKeyoard: \"addKeyoard\"\r\n  },\r\n  inputs: {\r\n    audio: [],\r\n    keyboard: \"\"\r\n  }\r\n};\r\n\r\nexport const GameContext = React.createContext(gameCotextDefault);\r\n\r\nconst keys = {\r\n  vimeo: \"9ab390cbf108fdcff105609b9747ac4f\"\r\n};\r\nexport const getFnLib = () => {\r\n  const searchVimeoVideos = async (qs) => {\r\n    let res = await axios.get(`https://api.vimeo.com/videos${qs}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${keys.vimeo}`\r\n      }\r\n    });\r\n    log.debug(\"searchVimeoVideos\", { res });\r\n    if (res) {\r\n      let vimeoData = res.data.data;\r\n      return vimeoData;\r\n    }\r\n    return [];\r\n  };\r\n  return {\r\n    searchVimeoVideos\r\n  };\r\n};\r\nexport const fnLib = getFnLib();\r\n\r\nfunction RoundScreen(props) {\r\n  const [timeLeft, setTimeLeft] = useState(null);\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        flexDirection: \"column\"\r\n      }}\r\n    >\r\n      {timeLeft !== 0 ? (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flex: 1,\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            flexDirection: \"column\"\r\n          }}\r\n        >\r\n          <CountdownCircleTimer\r\n            isPlaying\r\n            duration={30}\r\n            colors={[\r\n              [\"#004777\", 0.33],\r\n              [\"#F7B801\", 0.33],\r\n              [\"#A30000\", 0.33]\r\n            ]}\r\n          >\r\n            {({ remainingTime }) => {\r\n              setTimeLeft(remainingTime);\r\n              return <Typography variant=\"h1\">{remainingTime}s</Typography>;\r\n            }}\r\n          </CountdownCircleTimer>\r\n        </div>\r\n      ) : null}\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flex: 1,\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          flexDirection: \"column\"\r\n        }}\r\n      >\r\n        <SpeechRecognizer timeLeft={timeLeft} />\r\n        {(() => {\r\n          if (timeLeft > 0) {\r\n            return (\r\n              <iframe\r\n                src=\"https://giphy.com/embed/5q3NyUvgt1w9unrLJ9\"\r\n                width=\"240\"\r\n                height=\"240\"\r\n                frameBorder=\"0\"\r\n                class=\"giphy-embed\"\r\n                allowFullScreen\r\n              ></iframe>\r\n            );\r\n          }\r\n          return (\r\n            <iframe\r\n              src=\"https://giphy.com/embed/3ohryiYkE0DVwdLAys\"\r\n              width=\"240\"\r\n              height=\"240\"\r\n              frameBorder=\"0\"\r\n              class=\"giphy-embed\"\r\n              allowFullScreen\r\n            ></iframe>\r\n          );\r\n        })()}\r\n        <TextRecorder />\r\n        {timeLeft === 0 ? (\r\n          <Button\r\n            onClick={() => {\r\n              const event = new CustomEvent(\"game\", {\r\n                detail: {\r\n                  type: \"navigation\",\r\n                  navigation: {\r\n                    destination: \"score\"\r\n                  }\r\n                }\r\n              });\r\n              // Dispatch the event.\r\n              window.dispatchEvent(event);\r\n            }}\r\n          >\r\n            <Typography variant=\"h5\">\r\n              Publish your last blog post and call your boss.\r\n            </Typography>\r\n          </Button>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction TextRecorder(props) {\r\n  const [buffer, setBuffer] = useState([]);\r\n  const gameContext = useContext(GameContext);\r\n  useEffect(() => {\r\n    gameContext.dispatch({\r\n      type: gameContext.actions.addKeyoard,\r\n      payload: {\r\n        buffer\r\n      }\r\n    });\r\n  }, [buffer]);\r\n  useEffect(() => {\r\n    const onKeyUp = (e) => {\r\n      // log.debug(\"keyboard debug\", e);\r\n      setBuffer((p) => [...p, e.key]);\r\n    };\r\n    window.addEventListener(\"keyup\", onKeyUp);\r\n    return () => {\r\n      window.removeEventListener(\"keyup\", onKeyUp);\r\n    };\r\n  }, []);\r\n  return null;\r\n}\r\n\r\nfunction SpeechRecognizer(props) {\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [recognition, setRecognition] = useState(false);\r\n  const gameContext = useContext(GameContext);\r\n  useEffect(() => {\r\n    const SpeechRecognition =\r\n      window.SpeechRecognition || window.webkitSpeechRecognition;\r\n    const SpeechGrammarList =\r\n      window.SpeechGrammarList || window.webkitSpeechGrammarList;\r\n    const SpeechRecognitionEvent =\r\n      window.SpeechRecognitionEvent || window.webkitSpeechRecognitionEvent;\r\n    const grammarWords = [...words];\r\n    var grammar =\r\n      \"#JSGF V1.0; grammar colors; public <color> = aqua | azure | beige | bisque | black | blue | brown | chocolate | coral | crimson | cyan | fuchsia | ghostwhite | gold | goldenrod | gray | green | indigo | ivory | khaki | lavender | lime | linen | magenta | maroon | moccasin | navy | olive | orange | orchid | peru | pink | plum | purple | red | salmon | sienna | silver | snow | tan | teal | thistle | tomato | turquoise | violet | white | yellow ;\";\r\n\r\n    const recognition = new SpeechRecognition();\r\n    let speechRecognitionList = new SpeechGrammarList();\r\n    speechRecognitionList.addFromString(grammar, 1);\r\n    recognition.grammars = speechRecognitionList;\r\n    recognition.continuous = true;\r\n    recognition.lang = \"en-US\";\r\n    recognition.interimResults = false;\r\n    recognition.maxAlternatives = 1;\r\n    console.log(\"SpeechRecognizer\", {\r\n      SpeechRecognition,\r\n      SpeechGrammarList,\r\n      SpeechRecognitionEvent,\r\n      grammarWords,\r\n      grammar,\r\n      recognition,\r\n      speechRecognitionList\r\n    });\r\n\r\n    recognition.onresult = function (event) {\r\n      log.debug(\"Speech result.\", event);\r\n      Object.keys(event.results).forEach((key) => {\r\n        Object.keys(event.results[key]).forEach((innerKey) => {\r\n          const word = event.results[key][innerKey].transcript;\r\n          log.debug(\r\n            `Word: ${word}. Confidence: ` +\r\n              event.results[key][innerKey].confidence\r\n          );\r\n          gameContext.dispatch({\r\n            type: gameContext.actions.addAudio,\r\n            payload: {\r\n              word\r\n            }\r\n          });\r\n        });\r\n      });\r\n    };\r\n    recognition.onspeechend = function (e) {\r\n      setIsRecording(false);\r\n      log.debug(\"Speech ended.\", e);\r\n    };\r\n    setRecognition(recognition);\r\n  }, []);\r\n  return (\r\n    <div>\r\n      {props.timeLeft !== 0 ? (\r\n        <div style={{ textAlign: \"center\" }}>\r\n          <Typography variant=\"h5\">\r\n            Speak or Type. We will do the rest.\r\n          </Typography>\r\n        </div>\r\n      ) : null}\r\n      <br />\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\"\r\n        }}\r\n      >\r\n        {props.timeLeft !== 0 ? (\r\n          <Button\r\n            onClick={() => {\r\n              if (isRecording === false) {\r\n                try {\r\n                  recognition.start();\r\n                  setIsRecording(true);\r\n                } catch (e) {\r\n                  log.error(\"recognition start/stop error\", e.message);\r\n                }\r\n              } else {\r\n                try {\r\n                  recognition.stop();\r\n                  setIsRecording(false);\r\n                } catch (e) {\r\n                  log.error(\"recognition start/stop error\", e.message);\r\n                }\r\n              }\r\n            }}\r\n          >\r\n            <Typography variant=\"h2\">\r\n              {isRecording ? \"Stop Recording\" : \"Start Recording\"}\r\n            </Typography>\r\n          </Button>\r\n        ) : null}\r\n      </div>\r\n      <div className=\"output\"></div>\r\n      <div className=\"hints\"></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction GameManager(props) {\r\n  const [screens, setScreens] = useState([]);\r\n  const [currentScreen, setCurrentScreen] = useState(0);\r\n\r\n  useEffect(() => {\r\n    // audio\r\n    sound.add(\"soundtrack\", `/assets/piano.mp3`);\r\n    log.debug(\"sound debug\", sound);\r\n    if (sound._sounds.soundtrack.isPlaying === false) {\r\n      sound.play(\"soundtrack\");\r\n    }\r\n    return () => {\r\n      if (sound) {\r\n        sound._sounds.soundtrack.stop();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const welcomeScreen = (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        flexDirection: \"column\"\r\n      }}\r\n    >\r\n      <iframe\r\n        src=\"https://giphy.com/embed/XpizbEHNKqVUyuZTFc\"\r\n        width=\"480\"\r\n        height=\"349\"\r\n        frameBorder=\"0\"\r\n        class=\"giphy-embed\"\r\n        allowFullScreen\r\n      ></iframe>\r\n      <Typography variant=\"h1\">Angry Boss</Typography>\r\n      <div>{packageJson.version}</div>\r\n      <Typography variant=\"h4\">\r\n        Your last day as a professional blogger\r\n      </Typography>\r\n      <Button\r\n        onClick={() => {\r\n          const event = new CustomEvent(\"game\", {\r\n            detail: {\r\n              type: \"navigation\",\r\n              navigation: {\r\n                destination: \"story\"\r\n              }\r\n            }\r\n          });\r\n          // Dispatch the event.\r\n          window.dispatchEvent(event);\r\n        }}\r\n      >\r\n        <Typography variant=\"h6\">Start the Game</Typography>\r\n      </Button>\r\n    </div>\r\n  );\r\n  const roundScreen = <RoundScreen />;\r\n  const screenStyle = {\r\n    display: \"flex\",\r\n    flex: 1,\r\n    flexDirection: \"column\",\r\n    height: \"100%\",\r\n    color: \"white\"\r\n  };\r\n  const screenWrapper = (comp) => (\r\n    <div className=\"screen-wrapper\" style={screenStyle}>\r\n      {comp}\r\n    </div>\r\n  );\r\n\r\n  useEffect(() => {\r\n    const onGameEvent = (e) => {\r\n      log.debug(\"got game event\", e);\r\n      if (e.detail && e.detail.type === \"navigation\") {\r\n        log.debug(\"finding screen\", { screens, e });\r\n        let index = 0;\r\n        screens.forEach((s, i) => {\r\n          if (s.name === e.detail.navigation.destination) {\r\n            log.debug(\"selecting screen\", s);\r\n            index = i;\r\n          }\r\n        });\r\n        setCurrentScreen(index);\r\n      }\r\n    };\r\n    window.addEventListener(\"game\", onGameEvent);\r\n    return () => {\r\n      window.removeEventListener(\"game\", onGameEvent);\r\n    };\r\n  }, [screens]);\r\n\r\n  useEffect(() => {\r\n    // subscribe to the game events\r\n    setScreens([\r\n      {\r\n        name: \"main\",\r\n        component: screenWrapper(welcomeScreen)\r\n      },\r\n      {\r\n        name: \"story\",\r\n        component: screenWrapper(\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flex: 1,\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              flexDirection: \"column\"\r\n            }}\r\n          >\r\n            <Typography variant=\"h1\"></Typography>\r\n            <iframe\r\n              src=\"https://giphy.com/embed/l41lO8vRXzSB0CkqQ\"\r\n              width=\"480\"\r\n              height=\"346\"\r\n              frameBorder=\"0\"\r\n              class=\"giphy-embed\"\r\n              allowFullScreen\r\n            ></iframe>\r\n            <Typography\r\n              variant=\"h5\"\r\n              style={{ margin: \"15px\", textAlign: \"center\" }}\r\n            >\r\n              You are e lazy blogger.\r\n              <br />\r\n              You just got fired because your boss is not happy with your work.\r\n              <br />\r\n              You begged him for a last chance to impress him.{\" \"}\r\n              <span style={{ color: \"green\" }}>\r\n                Make the blog with the most views\r\n              </span>{\" \"}\r\n              of your entire career and keep the job!\r\n            </Typography>\r\n            <Button\r\n              onClick={() => {\r\n                const event = new CustomEvent(\"game\", {\r\n                  detail: {\r\n                    type: \"navigation\",\r\n                    navigation: {\r\n                      destination: \"round\"\r\n                    }\r\n                  }\r\n                });\r\n                // Dispatch the event.\r\n                window.dispatchEvent(event);\r\n              }}\r\n            >\r\n              <Typography variant=\"h4\">Got it!</Typography>\r\n            </Button>\r\n          </div>\r\n        )\r\n      },\r\n      {\r\n        name: \"round\",\r\n        component: screenWrapper(\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flex: 1,\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              flexDirection: \"column\"\r\n            }}\r\n          >\r\n            {roundScreen}\r\n          </div>\r\n        )\r\n      },\r\n      {\r\n        name: \"score\",\r\n        component: screenWrapper(\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flex: 1,\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              flexDirection: \"column\"\r\n            }}\r\n          >\r\n            <VideoGrid words={[\"cat\"]} />\r\n            <Button\r\n              onClick={() => {\r\n                window.location.reload();\r\n              }}\r\n            >\r\n              Replay\r\n            </Button>\r\n          </div>\r\n        )\r\n      }\r\n    ]);\r\n    setCurrentScreen(0);\r\n  }, []);\r\n\r\n  if (screens[currentScreen]) {\r\n    return <React.Fragment>{screens[currentScreen].component}</React.Fragment>;\r\n  }\r\n  return <LinearProgress />;\r\n}\r\n\r\nconst reducer = (prevState, action) => {\r\n  const fnName = \"Gotit\";\r\n  log.debug(`${fnName} - reducer ${action.type} - old state`, {\r\n    prevState,\r\n    action\r\n  });\r\n  if (action.type === gameCotextDefault.actions.replace) {\r\n    const newState = {\r\n      ...prevState,\r\n      ...action.payload\r\n    };\r\n    log.debug(`${fnName} - reducer ${action.type} - new state`, {\r\n      action,\r\n      prevState,\r\n      newState\r\n    });\r\n    return newState;\r\n  }\r\n  if (action.type === gameCotextDefault.actions.addAudio) {\r\n    const newState = {\r\n      ...prevState,\r\n      inputs: {\r\n        ...prevState.inputs,\r\n        audio: [...prevState.inputs.audio, action.payload.word]\r\n      }\r\n    };\r\n    log.debug(`${fnName} - reducer ${action.type} - new state`, {\r\n      action,\r\n      prevState,\r\n      newState\r\n    });\r\n    return newState;\r\n  }\r\n  if (action.type === gameCotextDefault.actions.addKeyoard) {\r\n    const newState = {\r\n      ...prevState,\r\n      inputs: {\r\n        ...prevState.inputs,\r\n        keyboard: action.payload.buffer.join(\"\")\r\n      }\r\n    };\r\n    log.debug(`${fnName} - reducer ${action.type} - new state`, {\r\n      action,\r\n      prevState,\r\n      newState\r\n    });\r\n    return newState;\r\n  }\r\n  throw new Error(`cannot handle action in reducer: ${JSON.stringify(action)}`);\r\n};\r\nexport default function Game() {\r\n  const [state, dispatch] = useReducer(reducer, gameCotextDefault);\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: state.actions.replace,\r\n      payload: {\r\n        dispatch: dispatch,\r\n        version: 1\r\n      }\r\n    });\r\n  }, []);\r\n  return (\r\n    <GameContext.Provider value={state}>\r\n      <GameManager />\r\n    </GameContext.Provider>\r\n  );\r\n}\r\n","import \"./styles.css\";\nimport Game from \"./Game\";\n\nexport default function App() {\n  return <Game />;\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}