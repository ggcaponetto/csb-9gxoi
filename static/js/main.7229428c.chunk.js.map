{"version":3,"sources":["comps/VideoGrid.js","Game.js","App.js","index.js"],"names":["words","VideoGrid","props","useState","vimeoData","setVimeoData","isLoading","setIsLoading","gameContext","useContext","GameContext","keywords","setKeywords","useEffect","update","a","wordsAudio","inputs","audio","join","split","filter","w","length","wordsKeyboard","keyboard","allWords","shuffled","sort","Math","random","selected","slice","i","log","promises","req","fnLib","searchVimeoVideos","encodeURIComponent","catch","e","push","Promise","all","newVimeoData","finalArray","vd","forEach","selectedVideo","v","embed","html","b","stats","plays","style","display","flex","flexDirection","Typography","variant","Button","onClick","iframes","window","document","querySelectorAll","res","vidIframe","player","Player","on","console","getVideoTitle","then","title","setAutopause","play","pause","flexWrap","map","k","alignItems","justifyContent","className","src","uri","replace","frameBorder","allow","name","CircularProgress","Object","keys","wordsObject","key","DEBUG","gameCotextDefault","actions","addAudio","addKeyoard","React","createContext","qs","axios","get","headers","Authorization","data","getFnLib","RoundScreen","timeLeft","setTimeLeft","isPlaying","duration","colors","remainingTime","SpeechRecognizer","width","height","class","allowFullScreen","TextRecorder","event","CustomEvent","detail","type","navigation","destination","dispatchEvent","buffer","setBuffer","dispatch","payload","onKeyUp","p","addEventListener","removeEventListener","isRecording","setIsRecording","recognition","setRecognition","SpeechRecognition","webkitSpeechRecognition","SpeechGrammarList","webkitSpeechGrammarList","SpeechRecognitionEvent","webkitSpeechRecognitionEvent","grammarWords","grammar","speechRecognitionList","addFromString","grammars","continuous","lang","interimResults","maxAlternatives","onresult","results","innerKey","word","transcript","confidence","onspeechend","textAlign","start","message","stop","GameManager","screens","setScreens","currentScreen","setCurrentScreen","sound","add","_sounds","soundtrack","welcomeScreen","roundScreen","screenStyle","color","screenWrapper","comp","onGameEvent","index","s","component","margin","Fragment","LinearProgress","reducer","prevState","action","fnName","newState","Error","JSON","stringify","Game","useReducer","state","version","Provider","value","App","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.7229428c.chunk.js","sourcesContent":["import Phaser from \"phaser\";\r\nimport React, {\r\n  useContext,\r\n  useReducer,\r\n  useCallback,\r\n  useEffect,\r\n  useState,\r\n  useRef\r\n} from \"react\";\r\nimport * as log from \"loglevel\";\r\nimport axios from \"axios\";\r\nimport Player from \"@vimeo/player\";\r\nimport * as wordsObject from \"../words\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport LinearProgress from \"@mui/material/LinearProgress\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport * as PIXI from \"pixi.js\";\r\nimport { sound } from \"@pixi/sound\";\r\nimport { GameContext, fnLib } from \"../Game\";\r\n\r\nconst words = [];\r\nObject.keys(wordsObject).forEach((key) => {\r\n  words.push(wordsObject[`${key}`]);\r\n});\r\nlog.setLevel(log.levels.DEBUG);\r\n\r\nexport default function VideoGrid(props) {\r\n  const [vimeoData, setVimeoData] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const gameContext = useContext(GameContext);\r\n  const [keywords, setKeywords] = useState([]);\r\n  useEffect(() => {\r\n    const update = async () => {\r\n      let nrOfVideos = 1;\r\n      let wordsAudio = gameContext.inputs.audio\r\n        .join(\" \")\r\n        .split(/(\\s+)/)\r\n        .filter((w) => w.length > 3);\r\n      let wordsKeyboard = gameContext.inputs.keyboard\r\n        .split(/(\\s+)/)\r\n        .filter((w) => w.length > 3);\r\n      let allWords = [...wordsAudio, ...wordsKeyboard];\r\n      const shuffled = allWords.sort(() => 0.5 - Math.random());\r\n      let selected = shuffled;\r\n      if (shuffled.length >= nrOfVideos) {\r\n        selected = shuffled.slice(0, nrOfVideos);\r\n      }\r\n      for (let i = 0; i < nrOfVideos; i++) {\r\n        if (!selected[i]) {\r\n          selected[i] = \"dogs\";\r\n        }\r\n      }\r\n      // debug\r\n      selected = [\"SIREN\"];\r\n      log.debug(\"searching video for words\", {\r\n        allWords,\r\n        wordsAudio,\r\n        wordsKeyboard,\r\n        shuffled,\r\n        selected\r\n      });\r\n      setIsLoading(true);\r\n      setKeywords(selected);\r\n      let promises = [];\r\n      for (let i = 0; i < selected.length; i++) {\r\n        const req = fnLib\r\n          .searchVimeoVideos(\r\n            `?sort=date&direction=desc&query=${encodeURIComponent(selected[i])}`\r\n          )\r\n          .catch((e) => {\r\n            setIsLoading(false);\r\n          });\r\n        promises.push(req);\r\n      }\r\n      let newVimeoData = await Promise.all(promises);\r\n      setIsLoading(false);\r\n      log.debug(\"playing all videos\", { newVimeoData });\r\n      let finalArray = [];\r\n      newVimeoData\r\n        .filter((vd) => !!vd === true)\r\n        .forEach((vd) => {\r\n          let selectedVideo = vd\r\n            .filter((v) => v.embed && v.embed.html)\r\n            .sort((a, b) => {\r\n              if (a.stats.plays || 0 > b.stats.plays || 0) {\r\n                return 1;\r\n              } else if (a.stats.plays || 0 <= b.stats.plays || 0) {\r\n                return -1;\r\n              } else {\r\n                return 0;\r\n              }\r\n            })[0];\r\n          finalArray.push(selectedVideo);\r\n        });\r\n      setVimeoData(finalArray);\r\n    };\r\n    update();\r\n  }, []);\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flex: 1,\r\n        flexDirection: \"column\"\r\n      }}\r\n    >\r\n      <Typography variant=\"h1\">Your Blog Post</Typography>\r\n      <Button\r\n        onClick={async () => {\r\n          let iframes = window.document.querySelectorAll(`.playbern-video`);\r\n          log.debug(\"playing all videos\", { iframes });\r\n          if (iframes) {\r\n            for (let i = 0; i < iframes.length; i++) {\r\n              await new Promise((res) => {\r\n                const vidIframe = iframes[i];\r\n                var player = new Player(vidIframe);\r\n                player.on(\"play\", function () {\r\n                  console.log(\"Played the video\");\r\n                });\r\n                player.getVideoTitle().then(function (title) {\r\n                  console.log(\"title:\", title);\r\n                });\r\n                player.setAutopause(false);\r\n                player.play();\r\n                res();\r\n                /* setTimeout(() => {\r\n                  player.pause();\r\n                  res();\r\n                }, 3000) */\r\n              });\r\n            }\r\n          }\r\n        }}\r\n      >\r\n        play all\r\n      </Button>\r\n      <Button\r\n        onClick={async () => {\r\n          let iframes = window.document.querySelectorAll(`.playbern-video`);\r\n          log.debug(\"playing all videos\", { iframes });\r\n          if (iframes) {\r\n            for (let i = 0; i < iframes.length; i++) {\r\n              await new Promise((res) => {\r\n                const vidIframe = iframes[i];\r\n                var player = new Player(vidIframe);\r\n                player.on(\"play\", function () {\r\n                  console.log(\"Played the video\");\r\n                });\r\n                player.getVideoTitle().then(function (title) {\r\n                  console.log(\"title:\", title);\r\n                });\r\n                player.setAutopause(false);\r\n                player.pause();\r\n                res();\r\n                /* setTimeout(() => {\r\n                  player.pause();\r\n                  res();\r\n                }, 3000) */\r\n              });\r\n            }\r\n          }\r\n        }}\r\n      >\r\n        stop all\r\n      </Button>\r\n      <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n        {keywords.map((k, i) => (\r\n          <span key={`${k}_${i}`}>\r\n            <Typography variant=\"body1\">{`#${k}`}</Typography>&nbsp;\r\n          </span>\r\n        ))}\r\n      </div>\r\n      <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n        {vimeoData.map((vd) => {\r\n          return (\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\"\r\n              }}\r\n            >\r\n              <iframe\r\n                key={vd.uri}\r\n                title=\"vimeo-video\"\r\n                className=\"playbern-video\"\r\n                src={`https://player.vimeo.com/video/${vd.uri.replace(\r\n                  \"/videos/\",\r\n                  \"\"\r\n                )}`}\r\n                frameBorder=\"0\"\r\n                allow=\"autoplay\"\r\n              ></iframe>\r\n              <Typography variant=\"h6\">{vd.name}</Typography>\r\n              <Typography variant=\"h4\">Plays: {vd.stats.plays || 0}</Typography>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      {isLoading ? <CircularProgress /> : null}\r\n    </div>\r\n  );\r\n}\r\n","import Phaser from \"phaser\";\r\nimport React, {\r\n  useContext,\r\n  useReducer,\r\n  useCallback,\r\n  useEffect,\r\n  useState,\r\n  useRef\r\n} from \"react\";\r\nimport \"./Game.css\";\r\nimport * as log from \"loglevel\";\r\nimport axios from \"axios\";\r\nimport Player from \"@vimeo/player\";\r\nimport * as wordsObject from \"./words\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport LinearProgress from \"@mui/material/LinearProgress\";\r\nimport * as PIXI from \"pixi.js\";\r\nimport { sound } from \"@pixi/sound\";\r\nimport VideoGrid from \"./comps/VideoGrid\";\r\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\r\n\r\nconst words = [];\r\nObject.keys(wordsObject).forEach((key) => {\r\n  words.push(wordsObject[`${key}`]);\r\n});\r\nlog.setLevel(log.levels.DEBUG);\r\n\r\nconst gameCotextDefault = {\r\n  actions: {\r\n    replace: \"replace\",\r\n    addAudio: \"addAudio\",\r\n    addKeyoard: \"addKeyoard\"\r\n  },\r\n  inputs: {\r\n    audio: [],\r\n    keyboard: \"\"\r\n  }\r\n};\r\n\r\nexport const GameContext = React.createContext(gameCotextDefault);\r\n\r\nconst keys = {\r\n  vimeo: \"701aa8cf274531af3ccd513e9642f67c\"\r\n};\r\nexport const getFnLib = () => {\r\n  const searchVimeoVideos = async (qs) => {\r\n    let res = await axios.get(`https://api.vimeo.com/videos${qs}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${keys.vimeo}`\r\n      }\r\n    });\r\n    log.debug(\"searchVimeoVideos\", { res });\r\n    if (res) {\r\n      let vimeoData = res.data.data;\r\n      return vimeoData;\r\n    }\r\n    return [];\r\n  };\r\n  return {\r\n    searchVimeoVideos\r\n  };\r\n};\r\nexport const fnLib = getFnLib();\r\n\r\nfunction RoundScreen(props) {\r\n  const [timeLeft, setTimeLeft] = useState(null);\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        flexDirection: \"column\"\r\n      }}\r\n    >\r\n      {timeLeft !== 0 ? (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flex: 1,\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            flexDirection: \"column\"\r\n          }}\r\n        >\r\n          <CountdownCircleTimer\r\n            isPlaying\r\n            duration={30}\r\n            colors={[\r\n              [\"#004777\", 0.33],\r\n              [\"#F7B801\", 0.33],\r\n              [\"#A30000\", 0.33]\r\n            ]}\r\n          >\r\n            {({ remainingTime }) => {\r\n              setTimeLeft(remainingTime);\r\n              return <Typography variant=\"h1\">{remainingTime}s</Typography>;\r\n            }}\r\n          </CountdownCircleTimer>\r\n        </div>\r\n      ) : null}\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flex: 1,\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          flexDirection: \"column\"\r\n        }}\r\n      >\r\n        <SpeechRecognizer timeLeft={timeLeft} />\r\n        {(() => {\r\n          if (timeLeft > 0) {\r\n            return (\r\n              <iframe\r\n                src=\"https://giphy.com/embed/5q3NyUvgt1w9unrLJ9\"\r\n                width=\"240\"\r\n                height=\"240\"\r\n                frameBorder=\"0\"\r\n                class=\"giphy-embed\"\r\n                allowFullScreen\r\n              ></iframe>\r\n            );\r\n          }\r\n          return (\r\n            <iframe\r\n              src=\"https://giphy.com/embed/3ohryiYkE0DVwdLAys\"\r\n              width=\"240\"\r\n              height=\"240\"\r\n              frameBorder=\"0\"\r\n              class=\"giphy-embed\"\r\n              allowFullScreen\r\n            ></iframe>\r\n          );\r\n        })()}\r\n        <TextRecorder />\r\n        {timeLeft === 0 ? (\r\n          <Button\r\n            onClick={() => {\r\n              const event = new CustomEvent(\"game\", {\r\n                detail: {\r\n                  type: \"navigation\",\r\n                  navigation: {\r\n                    destination: \"score\"\r\n                  }\r\n                }\r\n              });\r\n              // Dispatch the event.\r\n              window.dispatchEvent(event);\r\n            }}\r\n          >\r\n            <Typography variant=\"h5\">\r\n              Publish your last blog post and call your boss.\r\n            </Typography>\r\n          </Button>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction TextRecorder(props) {\r\n  const [buffer, setBuffer] = useState([]);\r\n  const gameContext = useContext(GameContext);\r\n  useEffect(() => {\r\n    gameContext.dispatch({\r\n      type: gameContext.actions.addKeyoard,\r\n      payload: {\r\n        buffer\r\n      }\r\n    });\r\n  }, [buffer]);\r\n  useEffect(() => {\r\n    const onKeyUp = (e) => {\r\n      // log.debug(\"keyboard debug\", e);\r\n      setBuffer((p) => [...p, e.key]);\r\n    };\r\n    window.addEventListener(\"keyup\", onKeyUp);\r\n    return () => {\r\n      window.removeEventListener(\"keyup\", onKeyUp);\r\n    };\r\n  }, []);\r\n  return null;\r\n}\r\n\r\nfunction SpeechRecognizer(props) {\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [recognition, setRecognition] = useState(false);\r\n  const gameContext = useContext(GameContext);\r\n  useEffect(() => {\r\n    const SpeechRecognition =\r\n      window.SpeechRecognition || window.webkitSpeechRecognition;\r\n    const SpeechGrammarList =\r\n      window.SpeechGrammarList || window.webkitSpeechGrammarList;\r\n    const SpeechRecognitionEvent =\r\n      window.SpeechRecognitionEvent || window.webkitSpeechRecognitionEvent;\r\n    const grammarWords = [...words];\r\n    var grammar =\r\n      \"#JSGF V1.0; grammar colors; public <color> = aqua | azure | beige | bisque | black | blue | brown | chocolate | coral | crimson | cyan | fuchsia | ghostwhite | gold | goldenrod | gray | green | indigo | ivory | khaki | lavender | lime | linen | magenta | maroon | moccasin | navy | olive | orange | orchid | peru | pink | plum | purple | red | salmon | sienna | silver | snow | tan | teal | thistle | tomato | turquoise | violet | white | yellow ;\";\r\n\r\n    const recognition = new SpeechRecognition();\r\n    let speechRecognitionList = new SpeechGrammarList();\r\n    speechRecognitionList.addFromString(grammar, 1);\r\n    recognition.grammars = speechRecognitionList;\r\n    recognition.continuous = true;\r\n    recognition.lang = \"en-US\";\r\n    recognition.interimResults = false;\r\n    recognition.maxAlternatives = 1;\r\n    console.log(\"SpeechRecognizer\", {\r\n      SpeechRecognition,\r\n      SpeechGrammarList,\r\n      SpeechRecognitionEvent,\r\n      grammarWords,\r\n      grammar,\r\n      recognition,\r\n      speechRecognitionList\r\n    });\r\n\r\n    recognition.onresult = function (event) {\r\n      log.debug(\"Speech result.\", event);\r\n      Object.keys(event.results).forEach((key) => {\r\n        Object.keys(event.results[key]).forEach((innerKey) => {\r\n          const word = event.results[key][innerKey].transcript;\r\n          log.debug(\r\n            `Word: ${word}. Confidence: ` +\r\n              event.results[key][innerKey].confidence\r\n          );\r\n          gameContext.dispatch({\r\n            type: gameContext.actions.addAudio,\r\n            payload: {\r\n              word\r\n            }\r\n          });\r\n        });\r\n      });\r\n    };\r\n    recognition.onspeechend = function (e) {\r\n      setIsRecording(false);\r\n      log.debug(\"Speech ended.\", e);\r\n    };\r\n    setRecognition(recognition);\r\n  }, []);\r\n  return (\r\n    <div>\r\n      {props.timeLeft !== 0 ? (\r\n        <div style={{ textAlign: \"center\" }}>\r\n          <Typography variant=\"h5\">\r\n            Speak or Type. We will do the rest.\r\n          </Typography>\r\n        </div>\r\n      ) : null}\r\n      <br />\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\"\r\n        }}\r\n      >\r\n        {props.timeLeft !== 0 ? (\r\n          <Button\r\n            onClick={() => {\r\n              if (isRecording === false) {\r\n                try {\r\n                  recognition.start();\r\n                  setIsRecording(true);\r\n                } catch (e) {\r\n                  log.error(\"recognition start/stop error\", e.message);\r\n                }\r\n              } else {\r\n                try {\r\n                  recognition.stop();\r\n                  setIsRecording(false);\r\n                } catch (e) {\r\n                  log.error(\"recognition start/stop error\", e.message);\r\n                }\r\n              }\r\n            }}\r\n          >\r\n            <Typography variant=\"h2\">\r\n              {isRecording ? \"Stop Recording\" : \"Start Recording\"}\r\n            </Typography>\r\n          </Button>\r\n        ) : null}\r\n      </div>\r\n      <div className=\"output\"></div>\r\n      <div className=\"hints\"></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction GameManager(props) {\r\n  const [screens, setScreens] = useState([]);\r\n  const [currentScreen, setCurrentScreen] = useState(0);\r\n\r\n  useEffect(() => {\r\n    // audio\r\n    sound.add(\"soundtrack\", `/assets/piano.mp3`);\r\n    log.debug(\"sound debug\", sound);\r\n    if (sound._sounds.soundtrack.isPlaying === false) {\r\n      sound.play(\"soundtrack\");\r\n    }\r\n    return () => {\r\n      if (sound) {\r\n        sound._sounds.soundtrack.stop();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const welcomeScreen = (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        flexDirection: \"column\"\r\n      }}\r\n    >\r\n      <iframe\r\n        src=\"https://giphy.com/embed/XpizbEHNKqVUyuZTFc\"\r\n        width=\"480\"\r\n        height=\"349\"\r\n        frameBorder=\"0\"\r\n        class=\"giphy-embed\"\r\n        allowFullScreen\r\n      ></iframe>\r\n      <Typography variant=\"h1\">Angry Boss</Typography>\r\n\r\n      <Typography variant=\"h4\">\r\n        Your last day as a professional blogger\r\n      </Typography>\r\n      <Button\r\n        onClick={() => {\r\n          const event = new CustomEvent(\"game\", {\r\n            detail: {\r\n              type: \"navigation\",\r\n              navigation: {\r\n                destination: \"story\"\r\n              }\r\n            }\r\n          });\r\n          // Dispatch the event.\r\n          window.dispatchEvent(event);\r\n        }}\r\n      >\r\n        <Typography variant=\"h6\">Start the Game</Typography>\r\n      </Button>\r\n    </div>\r\n  );\r\n  const roundScreen = <RoundScreen />;\r\n  const screenStyle = {\r\n    display: \"flex\",\r\n    flex: 1,\r\n    flexDirection: \"column\",\r\n    height: \"100%\",\r\n    color: \"white\"\r\n  };\r\n  const screenWrapper = (comp) => (\r\n    <div className=\"screen-wrapper\" style={screenStyle}>\r\n      {comp}\r\n    </div>\r\n  );\r\n\r\n  useEffect(() => {\r\n    const onGameEvent = (e) => {\r\n      log.debug(\"got game event\", e);\r\n      if (e.detail && e.detail.type === \"navigation\") {\r\n        log.debug(\"finding screen\", { screens, e });\r\n        let index = 0;\r\n        screens.forEach((s, i) => {\r\n          if (s.name === e.detail.navigation.destination) {\r\n            log.debug(\"selecting screen\", s);\r\n            index = i;\r\n          }\r\n        });\r\n        setCurrentScreen(index);\r\n      }\r\n    };\r\n    window.addEventListener(\"game\", onGameEvent);\r\n    return () => {\r\n      window.removeEventListener(\"game\", onGameEvent);\r\n    };\r\n  }, [screens]);\r\n\r\n  useEffect(() => {\r\n    // subscribe to the game events\r\n    setScreens([\r\n      {\r\n        name: \"main\",\r\n        component: screenWrapper(welcomeScreen)\r\n      },\r\n      {\r\n        name: \"story\",\r\n        component: screenWrapper(\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flex: 1,\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              flexDirection: \"column\"\r\n            }}\r\n          >\r\n            <Typography variant=\"h1\"></Typography>\r\n            <iframe\r\n              src=\"https://giphy.com/embed/l41lO8vRXzSB0CkqQ\"\r\n              width=\"480\"\r\n              height=\"346\"\r\n              frameBorder=\"0\"\r\n              class=\"giphy-embed\"\r\n              allowFullScreen\r\n            ></iframe>\r\n            <Typography\r\n              variant=\"h5\"\r\n              style={{ margin: \"15px\", textAlign: \"center\" }}\r\n            >\r\n              You are e lazy blogger.\r\n              <br />\r\n              You just got fired because your boss is not happy with your work.\r\n              <br />\r\n              You begged him for a last chance to impress him.{\" \"}\r\n              <span style={{ color: \"green\" }}>\r\n                Make the blog with the most views\r\n              </span>{\" \"}\r\n              of your entire career and keep the job!\r\n            </Typography>\r\n            <Button\r\n              onClick={() => {\r\n                const event = new CustomEvent(\"game\", {\r\n                  detail: {\r\n                    type: \"navigation\",\r\n                    navigation: {\r\n                      destination: \"round\"\r\n                    }\r\n                  }\r\n                });\r\n                // Dispatch the event.\r\n                window.dispatchEvent(event);\r\n              }}\r\n            >\r\n              <Typography variant=\"h4\">Got it!</Typography>\r\n            </Button>\r\n          </div>\r\n        )\r\n      },\r\n      {\r\n        name: \"round\",\r\n        component: screenWrapper(\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flex: 1,\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              flexDirection: \"column\"\r\n            }}\r\n          >\r\n            {roundScreen}\r\n          </div>\r\n        )\r\n      },\r\n      {\r\n        name: \"score\",\r\n        component: screenWrapper(\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flex: 1,\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              flexDirection: \"column\"\r\n            }}\r\n          >\r\n            <VideoGrid words={[\"cat\"]} />\r\n            <Button\r\n              onClick={() => {\r\n                const event = new CustomEvent(\"game\", {\r\n                  detail: {\r\n                    type: \"navigation\",\r\n                    navigation: {\r\n                      destination: \"main\"\r\n                    }\r\n                  }\r\n                });\r\n                // Dispatch the event.\r\n                window.dispatchEvent(event);\r\n              }}\r\n            >\r\n              Replay\r\n            </Button>\r\n          </div>\r\n        )\r\n      }\r\n    ]);\r\n    setCurrentScreen(3);\r\n  }, []);\r\n\r\n  if (screens[currentScreen]) {\r\n    return <React.Fragment>{screens[currentScreen].component}</React.Fragment>;\r\n  }\r\n  return <LinearProgress />;\r\n}\r\n\r\nconst reducer = (prevState, action) => {\r\n  const fnName = \"Gotit\";\r\n  log.debug(`${fnName} - reducer ${action.type} - old state`, {\r\n    prevState,\r\n    action\r\n  });\r\n  if (action.type === gameCotextDefault.actions.replace) {\r\n    const newState = {\r\n      ...prevState,\r\n      ...action.payload\r\n    };\r\n    log.debug(`${fnName} - reducer ${action.type} - new state`, {\r\n      action,\r\n      prevState,\r\n      newState\r\n    });\r\n    return newState;\r\n  }\r\n  if (action.type === gameCotextDefault.actions.addAudio) {\r\n    const newState = {\r\n      ...prevState,\r\n      inputs: {\r\n        ...prevState.inputs,\r\n        audio: [...prevState.inputs.audio, action.payload.word]\r\n      }\r\n    };\r\n    log.debug(`${fnName} - reducer ${action.type} - new state`, {\r\n      action,\r\n      prevState,\r\n      newState\r\n    });\r\n    return newState;\r\n  }\r\n  if (action.type === gameCotextDefault.actions.addKeyoard) {\r\n    const newState = {\r\n      ...prevState,\r\n      inputs: {\r\n        ...prevState.inputs,\r\n        keyboard: action.payload.buffer.join(\"\")\r\n      }\r\n    };\r\n    log.debug(`${fnName} - reducer ${action.type} - new state`, {\r\n      action,\r\n      prevState,\r\n      newState\r\n    });\r\n    return newState;\r\n  }\r\n  throw new Error(`cannot handle action in reducer: ${JSON.stringify(action)}`);\r\n};\r\nexport default function Game() {\r\n  const [state, dispatch] = useReducer(reducer, gameCotextDefault);\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: state.actions.replace,\r\n      payload: {\r\n        dispatch: dispatch,\r\n        version: 1\r\n      }\r\n    });\r\n  }, []);\r\n  return (\r\n    <GameContext.Provider value={state}>\r\n      <GameManager />\r\n    </GameContext.Provider>\r\n  );\r\n}\r\n","import \"./styles.css\";\nimport Game from \"./Game\";\n\nexport default function App() {\n  return <Game />;\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}