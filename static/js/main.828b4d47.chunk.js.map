{"version":3,"sources":["Game.js","App.js","index.js"],"names":["Game","resize","game","canvas","document","querySelector","windowWidth","window","innerWidth","windowHeight","innerHeight","windowRatio","gameRatio","config","width","height","style","runGame","vw","Math","max","documentElement","clientWidth","vh","clientHeight","type","Phaser","AUTO","scale","mode","Scale","FIT","parent","autoCenter","CENTER_BOTH","physics","default","arcade","gravity","y","scene","noMargins","preload","this","load","setBaseURL","image","create","add","emitter","particles","createEmitter","speed","start","end","blendMode","logo","setVelocity","setBounce","setCollideWorldBounds","startFollow","useEffect","addEventListener","log","destroy","DEBUG","App","rootElement","getElementById","ReactDOM","render"],"mappings":"0OAMe,SAASA,IACtB,SAASC,EAAOC,GACd,IAAIC,EAASC,SAASC,cAAc,UAChCC,EAAcC,OAAOC,WACrBC,EAAeF,OAAOG,YACtBC,EAAcL,EAAcG,EAC5BG,EAAYV,EAAKW,OAAOC,MAAQZ,EAAKW,OAAOE,OAC5CJ,EAAcC,GAChBT,EAAOa,MAAMF,MAAQR,EAAc,KACnCH,EAAOa,MAAMD,OAAST,EAAcM,EAAY,OAEhDT,EAAOa,MAAMF,MAAQL,EAAeG,EAAY,KAChDT,EAAOa,MAAMD,OAASN,EAAe,MAGzC,IAAMQ,EAAU,WACd,IAAMC,EAAKC,KAAKC,IACdhB,SAASiB,gBAAgBC,aAAe,EACxCf,OAAOC,YAAc,GAEjBe,EAAKJ,KAAKC,IACdhB,SAASiB,gBAAgBG,cAAgB,EACzCjB,OAAOG,aAAe,GAEpBG,EAAS,CACXY,KAAMC,IAAOC,KACbC,MAAO,CACLC,KAAMH,IAAOI,MAAMC,IACnBC,OAAQ,iBACRC,WAAYP,IAAOI,MAAMI,YACzBpB,MAAOI,EACPH,OAAQQ,GAEVY,QAAS,CACPC,QAAS,SACTC,OAAQ,CACNC,QAAS,CAAEC,EAAG,OAGlBC,MAAO,CACLC,WAAW,EACXC,QAOJ,WACEC,KAAKC,KAAKC,WAAW,yBAErBF,KAAKC,KAAKE,MAAM,MAAO,2BACvBH,KAAKC,KAAKE,MAAM,OAAQ,mCACxBH,KAAKC,KAAKE,MAAM,MAAO,6BAXrBC,OAcJ,WACEJ,KAAKK,IAAIF,MAAM,IAAK,IAAK,OAEzB,IAEIG,EAFYN,KAAKK,IAAIE,UAAU,OAEXC,cAAc,CACpCC,MAAO,IACPxB,MAAO,CAAEyB,MAAO,EAAGC,IAAK,GACxBC,UAAW,QAGTC,EAAOb,KAAKR,QAAQa,IAAIF,MAAM,IAAK,IAAK,QAE5CU,EAAKC,YAAY,IAAK,KACtBD,EAAKE,UAAU,EAAG,GAClBF,EAAKG,uBAAsB,GAE3BV,EAAQW,YAAYJ,MAEtB,OA7BW,IAAI9B,IAAO1B,KAAKa,IA8C7B,OAfAgD,qBAAU,WACR,IAAI3D,EACJK,OAAOuD,iBAAiB,UAAU,WAChCC,QAAU,WACN7D,IACF6D,QAAU,mBACV7D,EAAK8D,SAAQ,IAGf/D,EADAC,EAAOe,QAIThB,EADAC,EAAOe,OAEN,IAEI,KA9FT8C,WAAaA,SAAWE,O,WCDT,SAASC,IACtB,OAAO,cAAC,EAAD,ICCT,IAAMC,EAAc/D,SAASgE,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAACJ,EAAD,MAEFC,K","file":"static/js/main.828b4d47.chunk.js","sourcesContent":["import Phaser from \"phaser\";\r\nimport { useEffect } from \"react\";\r\nimport \"./Game.css\";\r\nimport * as log from \"loglevel\";\r\nlog.setLevel(log.levels.DEBUG);\r\n\r\nexport default function Game() {\r\n  function resize(game) {\r\n    var canvas = document.querySelector(\"canvas\");\r\n    var windowWidth = window.innerWidth;\r\n    var windowHeight = window.innerHeight;\r\n    var windowRatio = windowWidth / windowHeight;\r\n    var gameRatio = game.config.width / game.config.height;\r\n    if (windowRatio < gameRatio) {\r\n      canvas.style.width = windowWidth + \"px\";\r\n      canvas.style.height = windowWidth / gameRatio + \"px\";\r\n    } else {\r\n      canvas.style.width = windowHeight * gameRatio + \"px\";\r\n      canvas.style.height = windowHeight + \"px\";\r\n    }\r\n  }\r\n  const runGame = () => {\r\n    const vw = Math.max(\r\n      document.documentElement.clientWidth || 0,\r\n      window.innerWidth || 0\r\n    );\r\n    const vh = Math.max(\r\n      document.documentElement.clientHeight || 0,\r\n      window.innerHeight || 0\r\n    );\r\n    var config = {\r\n      type: Phaser.AUTO,\r\n      scale: {\r\n        mode: Phaser.Scale.FIT,\r\n        parent: \"phaser-example\",\r\n        autoCenter: Phaser.Scale.CENTER_BOTH,\r\n        width: vw,\r\n        height: vh\r\n      },\r\n      physics: {\r\n        default: \"arcade\",\r\n        arcade: {\r\n          gravity: { y: 500 }\r\n        }\r\n      },\r\n      scene: {\r\n        noMargins: true,\r\n        preload: preload,\r\n        create: create\r\n      }\r\n    };\r\n\r\n    var game = new Phaser.Game(config);\r\n\r\n    function preload() {\r\n      this.load.setBaseURL(\"http://labs.phaser.io\");\r\n\r\n      this.load.image(\"sky\", \"assets/skies/space3.png\");\r\n      this.load.image(\"logo\", \"assets/sprites/phaser3-logo.png\");\r\n      this.load.image(\"red\", \"assets/particles/red.png\");\r\n    }\r\n\r\n    function create() {\r\n      this.add.image(400, 300, \"sky\");\r\n\r\n      var particles = this.add.particles(\"red\");\r\n\r\n      var emitter = particles.createEmitter({\r\n        speed: 100,\r\n        scale: { start: 1, end: 0 },\r\n        blendMode: \"ADD\"\r\n      });\r\n\r\n      var logo = this.physics.add.image(400, 100, \"logo\");\r\n\r\n      logo.setVelocity(100, 200);\r\n      logo.setBounce(1, 1);\r\n      logo.setCollideWorldBounds(true);\r\n\r\n      emitter.startFollow(logo);\r\n    }\r\n    return game;\r\n  };\r\n  useEffect(() => {\r\n    let game;\r\n    window.addEventListener(\"resize\", () => {\r\n      log.debug(\"resized\");\r\n      if (game) {\r\n        log.debug(\"destroying game\");\r\n        game.destroy(true);\r\n      }\r\n      game = runGame();\r\n      resize(game);\r\n    });\r\n    game = runGame();\r\n    resize(game);\r\n  }, []);\r\n\r\n  return null;\r\n}\r\n","import \"./styles.css\";\nimport Game from \"./Game\";\n\nexport default function App() {\n  return <Game />;\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}